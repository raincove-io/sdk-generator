openapi: "3.0.0"
info:
  version: 1.0.0
  title: Pet Store

servers:
  - url: /petstore/api/v1

paths:
  /pets:
    get:
      summary: List all pets
      operationId: listPets
      tags:
        - pets
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          required: true
        - name: X-Rate-Limit
          in: header
          schema:
            type: string
          required: true
        - name: limit
          in: query
          description: How many items to return at one time (max 100)
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: A paged array of pets
          headers:
            x-next:
              description: A link to the next page of responses
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Pets"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: Create a pet
      operationId: createPets
      parameters:
        - name: nosave
          in: query
          schema:
            type: string
        - name: test
          in: query
          schema:
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pet'
      tags:
        - pets
      responses:
        '201':
          description: Null response
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /pets/{petId}:
    get:
      summary: Info for a specific pet
      operationId: showPetById
      tags:
        - pets
      parameters:
        - name: petId
          in: path
          required: true
          description: The id of the pet to retrieve
          schema:
            type: string
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Pets"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
components:
  schemas:
    Pet:
      description: |
        A Pet is an animal that you keep around but not for consumption.

        # Please Beware:

        - Pets are commonly mistaken as livestock in some places
        - As a result, tragic circumstances have been observed involving pets being eaten by the local populace
      required:
        - id
        - name
      properties:
        id:
          type: integer
          format: int64
        nicknames:
          type: array
          items:
            type: string
        complex:
          type: array
          items:
            additionalProperties:
              $ref: '#/components/schemas/Label'
        name:
          type: string
        tag:
          type: string
        labels:
          additionalProperties:
            $ref: '#/components/schemas/Label'
        metadata:
          additionalProperties:
            type: string
        owner:
          $ref: '#/components/schemas/Owner'
    Label:
      properties:
        name:
          type: string
        value:
          type: string
        labelType:
          $ref: '#/components/schemas/LabelType'
    Defunct:
      type: object
    LabelType:
      type: string
      enum:
        - A
        - B
        - C
    Owner:
      properties:
        id:
          type: number
          format: int64
        addresses:
          type: array
          items:
            properties:
              line1:
                type: string
              zipcode:
                type: integer
                maxLength: 7
                minLength: 7
              city:
                type: string
        pets:
          type: array
          items:
            $ref: '#/components/schemas/Pet'
    Pets:
      properties:
        pets:
          type: array
          items:
            $ref: "#/components/schemas/Pet"
    Error:
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
